#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("../../dbd/NSLS-II-SST2.dbd")
#! DBDEND


record(sel, "$(SYS){$(DEV)}-MoveForbidden") {
  field(DESC, "Global movement-allowed check")
  field(SCAN, ".5 second")
  field(PINI, "RUNNING")
  field(SELM, "High Signal")
  field(INPA, "$(SYS){$(DEV)}Sw:EffILock-Sts PP NMS")
  field(INPB, "$(SYS){$(DEV)}Sw:StopAll-Sts PP NMS")
  field(INPC, "$(SYS){$(DEV)}Sw:OpenGapEff-Sts PP NMS")
  field(FLNK, "$(SYS){$(DEV)}-DisableMtrs")
}

record(bi, "$(SYS){$(DEV)}Cmd:StopAll-Sts") {
  field(DESC, "StopAll command readback")
  field(SCAN, "Passive")
  field(INP, "@asyn(PMAC_REG_PORT)var(P300)")
  field(ZNAM, "Clear StopAll")
  field(ONAM, "Request StopAll")
}

record(dfanout, "$(SYS){$(DEV)}-DisableMtrs") {
  field(DESC, "Disables all motors")
  field(SELM, "All")
  field(OUTA, "$(MOTOR1).VAL PP NMS")
  field(OUTB, "$(MOTOR3).VAL PP NMS")
  field(OUTE, "$(MOTORGAP).DISP PP NMS")
  field(OUTF, "$(MOTORGAP)-SP.DISP NPP NMS")
  field(DOL, "$(SYS){$(DEV)}-MoveForbidden")
  field(OMSL, "closed_loop")
}


record(bi, "$(SYS){$(DEV)}Sw:ILock-Sts") {
  field(DTYP, "asynInt32")
  field(DESC, "Interlock status")
  field(SCAN, "Passive")
  field(INP, "@asyn(PMAC_REG_PORT)var(M27)inv(1)")
  field(ZNAM, "No Inactive")
  field(ONAM, "Interlock")
}

record(bi, "$(SYS){$(DEV)}Sw:KeyOver-Sts") {
  field(DTYP, "asynInt32")
  field(DESC, "Query key override status")
  field(SCAN, "Passive")
  field(INP, "@asyn(PMAC_REG_PORT)var(M26)")
  field(ZNAM, "No ILock Override")
  field(ONAM, "ILock Override")
  field(FLNK, "$(SYS){$(DEV)}Cmd:StopAll-Sts")
}

record(bi, "$(SYS){$(DEV)}Sw:EffILock-Sts") {
  field(DTYP, "asynInt32")
  field(DESC, "Effective interlock status")
  field(SCAN, "Passive")
  field(INP, "@asyn(PMAC_REG_PORT)var(P421)")
  field(ZNAM, "No Eff.Interlock")
  field(ONAM, "Eff.Interlock active")
  field(FLNK, "$(SYS){$(DEV)}Sw:ILock-Sts")
}

record(bo, "$(SYS){$(DEV)}Sw:OpenGap-Sts") {
  field(DESC, "Over-temperature open gap")
  field(VAL, "0")
  field(FLNK, "$(SYS){$(DEV)}Sw:EStop-Sts")
}

record(bi, "$(SYS){$(DEV)}Sw:OpenGapEff-Sts") {
  field(DTYP, "asynInt32")
  field(DESC, "Effective over-temperature open gap")
  field(SCAN, "Passive")
  field(INP, "@asyn(PMAC_REG_PORT)var(P411)")
  field(ZNAM, "Over-temperature inactive")
  field(ONAM, "Over-temperature active")
  field(FLNK, "$(SYS){$(DEV)}Sw:OpenGap-Sts")
}

record(bi, "$(SYS){$(DEV)}Sw:StopAll-Sts") {
  field(DTYP, "asynInt32")
  field(DESC, "Stop all status")
  field(SCAN, "Passive")
  field(INP, "@asyn(PMAC_REG_PORT)var(P301)")
  field(ZNAM, "StopAll inactive")
  field(ONAM, "StopAll requested")
}

record(bi, "$(SYS){$(DEV)}Sw:LimitsDisabled-Sts") {
  field(DTYP, "asynInt32")
  field(DESC, "Soft.Limits disabled status")
  field(SCAN, "2 second")
  field(INP, "@asyn(PMAC_REG_PORT)var(P222)")
  field(ZNAM, "Limits enabled")
  field(ONAM, "Limits disabled")
  field(FLNK, "$(SYS){$(DEV)}Cmd:DisableLimits-Sts")
}

record(bi, "$(SYS){$(DEV)}Sw:EStop-Sts") {
  field(DTYP, "asynInt32")
  field(DESC, "Emergency stop status")
  field(SCAN, "Passive")
  field(INP, "@asyn(PMAC_REG_PORT)var(M29)")
  field(ZNAM, "Emergency stop inactive")
  field(ONAM, "Emergency stop requested")
  field(FLNK, "$(SYS){$(DEV)}Sw:KeyOver-Sts")
}

record(bi, "$(SYS){$(DEV)}Cmd:DisableLimits-Sts") {
  field(DTYP, "asynInt32")
  field(DESC, "Disable soft. limits command")
  field(SCAN, "Passive")
  field(INP, "@asyn(PMAC_REG_PORT)var(P221)")
  field(ZNAM, "Enable limits")
  field(ONAM, "Disable limits")
}

record(bo, "$(SYS){$(DEV)}Cmd:DisableLimits-SP") {
  field(DTYP, "asynInt32")
  field(DESC, "Disable soft. limits command")
  field(SCAN, "Passive")
  field(FLNK, "$(SYS){$(DEV)}Cmd:DisableLimits-Sts")
  field(ZNAM, "Enable limits")
  field(ONAM, "Disable limits")
  field(OUT, "@asyn(PMAC_REG_PORT)var(P221)")
}

record(asyn, "$(SYS){$(DEV)}Asyn:SavePMAC-Cmd") {
  field(DESC, "Save PMAC parameters")
  field(DTYP, "asynRecordDevice")
  field(PORT, "$(PMACPORT)")
  field(ADDR, "-1")
  field(TMOD, "Write/Read")
  field(AOUT, "SAVE")
}

record(bo, "$(SYS){$(DEV)}Cmd:StopAll-SP") {
  field(DESC, "Request StopAll ")
  field(SCAN, "Passive")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn(PMAC_REG_PORT)var(P300)")
  field(ZNAM, "Clear StopAll")
  field(ONAM, "Request StopAll")
  field(OMSL, "closed_loop")
}


record(bo, "$(SYS){$(DEV)}Cmd:SafetyReset") {
  field(DESC, "Request Safety PLC Reset")
  field(DTYP, "asynInt32")
  field(SCAN, "Passive")
  field(OUT, "@asyn(PMAC_REG_PORT)var(P1501)")
  field(ZNAM, "Reset inactive")
  field(ONAM, "Reset requested")
}

record(bi, "$(SYS){$(DEV)}SafetyPLC-Sts") {
  field(DESC, "Safety PLC Status")
  field(DTYP, "asynInt32")
  field(SCAN, "1 second")
  field(INP, "@asyn(PMAC_REG_PORT)var(M27)")
  field(ZNAM, "Safety PLC Tripped")
  field(ONAM, "Status OK")
}

record(bi, "$(SYS){$(DEV)}CorCoilFan-Sts") {
  field(DESC, "Correction Coil Fan Status")
  field(DTYP, "asynInt32")
  field(SCAN, "1 second")
  field(INP, "@asyn(PMAC_REG_PORT)var(M23)inv(1)")
  field(ZNAM, "OK")
  field(ONAM, "Fan OFF")
}

