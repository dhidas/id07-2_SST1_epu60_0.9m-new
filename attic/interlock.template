#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("../../dbd/NSLS-II-SST2.dbd")
#! DBDEND


record(sel, "$(SYS){$(DEV)}-MoveForbidden") {
  field(DESC, "Global movement-allowed check")
  field(SCAN, ".5 second")
  field(PINI, "RUNNING")
  field(SELM, "High Signal")
  field(INPA, "$(SYS){$(DEV)}Sw:EffILock-Sts PP NMS")
  field(INPB, "$(SYS){$(DEV)}Sw:StopAll-Sts PP NMS")
  field(INPC, "$(SYS){$(DEV)}Sw:OpenGapEff-Sts PP NMS")
  field(FLNK, "$(SYS){$(DEV)}-DisableMtrs")
}

record(bi, "$(SYS){$(DEV)}Cmd:StopAll-Sts") {
  field(DTYP, "stream")
  field(DESC, "StopAll command readback")
  field(SCAN, "Passive")
  field(INP, "@pmac.proto getIntVar(P300) $(PORT)")
  field(ZNAM, "Clear StopAll")
  field(ONAM, "Request StopAll")
}

record(dfanout, "$(SYS){$(DEV)}-DisableMtrs") {
  field(DESC, "Disables all motors")
  field(SELM, "All")
  field(OUTA, "$(MOTOR1).VAL PP NMS")
  field(OUTB, "$(MOTOR3).VAL PP NMS")
  field(OUTE, "$(MOTORGAP).DISP PP NMS")
  field(OUTF, "$(MOTORGAP)-SP.DISP NPP NMS")
  field(DOL, "$(SYS){$(DEV)}-MoveForbidden")
  field(OMSL, "closed_loop")
}


record(bi, "$(SYS){$(DEV)}Sw:ILock-Sts-INP") {
  field(DTYP, "stream")
  field(DESC, "Interlock status")
  field(SCAN, "Passive")
  field(INP, "@pmac.proto getIntVar(M27) $(PORT)")
  field(ZNAM, "Interlock")
  field(ONAM, "No Inactive")
}

record(calc, "$(SYS){$(DEV)}Sw:ILock-Sts") {
  field(DESC, "Interlock status")
  field(SCAN, "Passive")
  field(INPA, "$(SYS){$(DEV)}Sw:ILock-Sts-INP PP")
  field(CALC, "1 - A")
  field(PREC, "0")
#  field(ZNAM, "No Inactive")
#  field(ONAM, "Interlock")
}

record(bi, "$(SYS){$(DEV)}Sw:KeyOver-Sts") {
  field(DTYP, "stream")
  field(DESC, "Query key override status")
  field(SCAN, "Passive")
  field(INP, "@pmac.proto getIntVar(M26) $(PORT)")
  field(ZNAM, "No ILock Override")
  field(ONAM, "ILock Override")
  field(FLNK, "$(SYS){$(DEV)}Cmd:StopAll-Sts")
}

record(bi, "$(SYS){$(DEV)}Sw:EffILock-Sts") {
  field(DTYP, "stream")
  field(DESC, "Effective interlock status")
  field(SCAN, "Passive")
  field(INP, "@pmac.proto getIntVar(P421) $(PORT)")
  field(ZNAM, "No Eff.Interlock")
  field(ONAM, "Eff.Interlock active")
  field(FLNK, "$(SYS){$(DEV)}Sw:ILock-Sts")
}

record(bo, "$(SYS){$(DEV)}Sw:OpenGap-Sts") {
  field(DESC, "Over-temperature open gap")
  field(VAL, "0")
  field(FLNK, "$(SYS){$(DEV)}Sw:EStop-Sts")
}

record(bi, "$(SYS){$(DEV)}Sw:OpenGapEff-Sts") {
  field(DTYP, "stream")
  field(DESC, "Effective over-temperature open gap")
  field(SCAN, "Passive")
  field(INP, "@pmac.proto getIntVar(P411) $(PORT)")
  field(ZNAM, "Over-temperature inactive")
  field(ONAM, "Over-temperature active")
  field(FLNK, "$(SYS){$(DEV)}Sw:OpenGap-Sts")
}

record(bi, "$(SYS){$(DEV)}Sw:StopAll-Sts") {
  field(DTYP, "stream")
  field(DESC, "Stop all status")
  field(SCAN, "Passive")
  field(INP, "@pmac.proto getIntVar(P301) $(PORT)")
  field(ZNAM, "StopAll inactive")
  field(ONAM, "StopAll requested")
}

record(bi, "$(SYS){$(DEV)}Sw:LimitsDisabled-Sts") {
  field(DTYP, "stream")
  field(DESC, "Soft.Limits disabled status")
  field(SCAN, "2 second")
  field(INP, "@pmac.proto getIntVar(P222) $(PORT)")
  field(ZNAM, "Limits enabled")
  field(ONAM, "Limits disabled")
  field(FLNK, "$(SYS){$(DEV)}Cmd:DisableLimits-Sts")
}

record(bi, "$(SYS){$(DEV)}Sw:EStop-Sts") {
  field(DTYP, "stream")
  field(DESC, "Emergency stop status")
  field(SCAN, "Passive")
  field(INP, "@pmac.proto getIntVar(M29) $(PORT)")
  field(ZNAM, "Emergency stop inactive")
  field(ONAM, "Emergency stop requested")
  field(FLNK, "$(SYS){$(DEV)}Sw:KeyOver-Sts")
}

record(bi, "$(SYS){$(DEV)}Cmd:DisableLimits-Sts") {
  field(DTYP, "stream")
  field(DESC, "Disable soft. limits command")
  field(SCAN, "Passive")
  field(INP, "@pmac.proto getIntVar(P221) $(PORT)")
  field(ZNAM, "Enable limits")
  field(ONAM, "Disable limits")
}

record(bo, "$(SYS){$(DEV)}Cmd:DisableLimits-SP") {
  field(DTYP, "stream")
  field(DESC, "Disable soft. limits command")
  field(SCAN, "Passive")
  field(FLNK, "$(SYS){$(DEV)}Cmd:DisableLimits-Sts")
  field(ZNAM, "Enable limits")
  field(ONAM, "Disable limits")
  field(OUT, "@pmac.proto setIntVar(P221) $(PORT)")
}

record(stringout, "$(SYS){$(DEV)}Asyn:SavePMAC-Cmd") {
  field(DESC, "Save PMAC parameters")
  field(DTYP, "stream")
  field(VAL, "SAVE")
  field(OUT, "@pmac.proto sendString() $(PORT)")
}

record(bo, "$(SYS){$(DEV)}Cmd:StopAll-SP") {
  field(DESC, "Request StopAll")
  field(SCAN, "Passive")
  field(DTYP, "stream")
  field(OUT, "@pmac.proto setIntVar(P300) $(PORT)")
  field(ZNAM, "Clear StopAll")
  field(ONAM, "Request StopAll")
  field(OMSL, "closed_loop")
}


record(bo, "$(SYS){$(DEV)}Cmd:SafetyReset") {
  field(DESC, "Request Safety PLC Reset")
  field(DTYP, "stream")
  field(SCAN, "Passive")
  field(OUT, "@pmac.proto setIntVar(P1501) $(PORT)")
  field(ZNAM, "Reset inactive")
  field(ONAM, "Reset requested")
}

record(bi, "$(SYS){$(DEV)}SafetyPLC-Sts") {
  field(DESC, "Safety PLC Status")
  field(DTYP, "stream")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(M27) $(PORT)")
  field(ZNAM, "Safety PLC Tripped")
  field(ONAM, "Status OK")
}

record(bi, "$(SYS){$(DEV)}CorCoilFan-Sts-INP") {
  field(DESC, "Correction Coil Fan Status")
  field(DTYP, "stream")
  field(SCAN, "1 second")
  field(INP, "@pmac.proto getIntVar(M23) $(PORT)")
  field(ZNAM, "Fan OFF")
  field(ONAM, "OK")
}

record(calc, "$(SYS){$(DEV)}CorCoilFan-Sts") {
  field(DESC, "Interlock status")
  field(SCAN, "Passive")
  field(INPA, "$(SYS){$(DEV)}CorCoilFan-Sts-INP PP")
  field(CALC, "1 - A")
  field(PREC, "0")
#  field(ZNAM, "No Inactive")
#  field(ONAM, "Interlock")
}

